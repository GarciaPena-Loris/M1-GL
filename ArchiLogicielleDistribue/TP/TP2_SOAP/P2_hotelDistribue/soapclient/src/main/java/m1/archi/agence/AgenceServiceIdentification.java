
package m1.archi.agence;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AgenceServiceIdentification", targetNamespace = "http://service.archi.m1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AgenceServiceIdentification {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws AgenceNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteAgence", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.DeleteAgence")
    @ResponseWrapper(localName = "deleteAgenceResponse", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.DeleteAgenceResponse")
    @Action(input = "http://service.archi.m1/AgenceServiceIdentification/deleteAgenceRequest", output = "http://service.archi.m1/AgenceServiceIdentification/deleteAgenceResponse", fault = {
        @FaultAction(className = AgenceNotFoundException_Exception.class, value = "http://service.archi.m1/AgenceServiceIdentification/deleteAgence/Fault/AgenceNotFoundException")
    })
    public boolean deleteAgence(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0)
        throws AgenceNotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListeAgence", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.GetListeAgence")
    @ResponseWrapper(localName = "getListeAgenceResponse", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.GetListeAgenceResponse")
    @Action(input = "http://service.archi.m1/AgenceServiceIdentification/getListeAgenceRequest", output = "http://service.archi.m1/AgenceServiceIdentification/getListeAgenceResponse")
    public List<String> getListeAgence();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws AgenceNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "afficherAgence", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.AfficherAgence")
    @ResponseWrapper(localName = "afficherAgenceResponse", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.AfficherAgenceResponse")
    @Action(input = "http://service.archi.m1/AgenceServiceIdentification/afficherAgenceRequest", output = "http://service.archi.m1/AgenceServiceIdentification/afficherAgenceResponse", fault = {
        @FaultAction(className = AgenceNotFoundException_Exception.class, value = "http://service.archi.m1/AgenceServiceIdentification/afficherAgence/Fault/AgenceNotFoundException")
    })
    public String afficherAgence(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0)
        throws AgenceNotFoundException_Exception
    ;

}
